"""
config.py: Centralized configuration management for malyz3r
"""
import os
import json

DEFAULT_CONFIG = {
    "log_file": os.environ.get("MALYZ3R_LOG_FILE", "malyz3r.log"),
    "rules_dir": os.environ.get("MALYZ3R_RULES_DIR", os.path.join(os.path.dirname(__file__), "rules")),
    "virustotal_api_key": os.environ.get("MALYZ3R_VT_API_KEY", ""),
    "scan_parallelism": int(os.environ.get("MALYZ3R_PARALLELISM", 4)),
    "output_format": os.environ.get("MALYZ3R_OUTPUT_FORMAT", "text"),
    "enable_memory_scan": os.environ.get("MALYZ3R_MEMORY_SCAN", "false").lower() == "true",
    "enable_pcap_scan": os.environ.get("MALYZ3R_PCAP_SCAN", "false").lower() == "true",
    "enable_cloud_scan": os.environ.get("MALYZ3R_CLOUD_SCAN", "false").lower() == "true",
    "enable_email_scan": os.environ.get("MALYZ3R_EMAIL_SCAN", "false").lower() == "true",
}

CONFIG_PATH = os.environ.get("MALYZ3R_CONFIG", os.path.expanduser("~/.malyz3r_config.json"))


def load_config():
    if os.path.exists(CONFIG_PATH):
        try:
            with open(CONFIG_PATH, "r") as f:
                user_config = json.load(f)
            config = DEFAULT_CONFIG.copy()
            config.update(user_config)
            return config
        except Exception:
            pass
    return DEFAULT_CONFIG.copy()


def save_config(config):
    with open(CONFIG_PATH, "w") as f:
        json.dump(config, f, indent=2)
