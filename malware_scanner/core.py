import yara
import os
import hashlib
from malware_scanner.utils import print_result

RULES_DIR = os.path.join(os.path.dirname(__file__), "rules")

def compile_yara_rules():
    rules = {}
    for rule_file in os.listdir(RULES_DIR):
        if rule_file.endswith(".yar"):
            path = os.path.join(RULES_DIR, rule_file)
            rules[rule_file] = yara.compile(filepath=path)
    return rules

def hash_file(file_path):
    sha256_hash = hashlib.sha256()
    with open(file_path, "rb") as f:
        for byte_block in iter(lambda: f.read(4096), b""):
            sha256_hash.update(byte_block)
    return sha256_hash.hexdigest()

def scan_with_yara(file_path):
    if not os.path.exists(file_path):
        print_result("File does not exist!", "error")
        return

    print_result(f"[*] Scanning file: {file_path}", "info")
    rules = compile_yara_rules()

    matched = False
    for rule_name, rule in rules.items():
        matches = rule.match(file_path)
        if matches:
            matched = True
            print_result(f"[!] Threat detected by {rule_name}:", "danger")
            for match in matches:
                print_result(f"    Rule: {match.rule}", "danger")

    file_hash = hash_file(file_path)
    print_result(f"SHA256 Hash: {file_hash}", "info")

    if not matched:
        print_result("No YARA threats detected.", "success")
